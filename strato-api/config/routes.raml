#%RAML 0.8
title: 'BlockApps API v1.2'
baseUri: 'http://hacknet.blockapps.net/eth/{version}'
version: v1.2
protocols: [ HTTP ]

/faucet:
  description: | 
    handler: FaucetR
  post: 
    description: Claim ether from the faucet
    queryParameters:
      address:
        description: the hex encoded address
        required: true
        type: string
        example: 
      responses:

/extabi:
  description: |
    handler: ExtABIR
  post: 
    description: Get the symbol table associated with a solidity source file.
    queryParameters:
      src:
        description: a solidity source main file
        required: false
        type: string
        example: "src=contract C{}"
      main:
        description: a solidity source main file
        required: false
        type: file
        repeat: true
        example:
      import:
        description: a solidity source file imported by a main file
        required: false
        type: file
        repeat: true
        example:
      responses:

/stats:
  /difficulty:
    description: |
      handler: StatDiffR
    get:
      description: Get the current total difficulty on the blockchain
  /totaltx:
    description: |
      handler: StatTxR
    get:
      description: Get the current total number of transactions on the blockchain

/block:
  description: |
    handler: BlockInfoR
  get:
    description: Query the blocks
    responses:
      200:
        body:
          application/json:

            example: |
              {
                "next": "/query/block?index=1&number=0",
                "kind":"Block",
                "blockUncles":[],
                "receiptTransactions":[],
                "blockData": {
                  "extraData":8021325944645810444600318958160784541777644290714340452591235899924003128058,
                  "gasUsed":0,"gasLimit":5000,
                  "kind":"BlockData",
                  "unclesHash":"1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                  "mixHash":"0000000000000000000000000000000000000000000000000000000000000000",
                  "receiptsRoot":"56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                  "number":0,
                  "difficulty":17179869184,
                  "timestamp":"1970-01-01T00:00:00.000Z",
                  "coinbase":"0",
                  "parentHash":"0000000000000000000000000000000000000000000000000000000000000000",
                  "nonce":66,
                  "stateRoot":"d7f8974fb5ac78d9ac099b9ad5018bedc2ce0a72dad1827a1709da30580f0544",
                  "transactionsRoot":"56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421"}
                }
              }

    queryParameters:
      index:
        type: integer
        description: Block number to offset from
        example: 101
      number:
        type: integer
        description: The block number
        example: 445
        required: false
      minnumber:
        type: integer
        description: The minimum block number
        example: 40
        required: false
      maxnumber:
        type: integer
        description: The maximum block number
        example: 40
        required: false
      gaslim:
        type: integer
        description: Gaslimit for block
        example: 210000
      mingaslim:
        type: integer
        description: Minimum gaslimit for block
        example: 2100       
      maxgaslim:
        type: integer
        description: Maximum gaslimit for block
        example: 990810000
      gasused:
        type: integer
        description: Gas used for block
        example: 11242342
      mingasused:
        type: integer
        description: Minumum as used for block
        example: 12342         
      maxgasused: 
        type: integer
        description: Maximum gas used for block
        example: 99942342
      diff:
        type: integer
        description: Block difficulty
        example: 14000
      mindiff:
        type: integer
        description: Minimum block difficulty
        example: 1200         
      maxdiff: 
        type: integer
        description: Maximum block difficulty
        example: 12129000
      txaddress:
        type: string
        description: TODO
        example: 15de68788d01b2504df8234cb4721c54ed567305
      address:
        type: string
        description: Block contains address
        example: 15de68788d01b2504df8234cb4721c54ed567305
      hash:
        type: string
        description: The hash of the block
        example: 6863988e8c04f26b46dad756045f8f619cdf75bb58bc8d3e95ae3067b7e47adf
      coinbase:
        type: string
        description: The address that mined the block
        example: 15de68788d01b2504df8234cb4721c54ed567305

  /last:
    /{Integer}:
      description: |
        handler: BlkLastR
      get:
        description: Get the last number of blocks

/log:
  description: |
    handler: LogInfoR
  get:
    description: Query logs
    queryParameters:
      index:
        type: integer
        description: Tabular index offset
        example: 7
      hash:
        type: integer
        description: Transaction hash
        example: 6863988e8c04f26b46dad756045f8f619cdf75bb58bc8d3e95ae3067b7e47adf
      address:
        type: string
        description: The address associated with the log
        example: 15de68788d01b2504df8234cb4721c54ed567305

/account:
  description: |
    handler: AccountInfoR
  get:
    description: Query the accounts
    queryParameters:
      index:
        type: string
        description: Lexigraphical index for address. Results are offset from this value.
        example: 14ab 
      balance:
        type: integer
        description: The balance of the account in wei
        example: 2320000000
      minbalance:
        type: integer
        description: The minimum balance of the account in wei
        example: 23200    
      maxbalance:
        type: integer
        description: The maximumbalance of the account in wei
        example: 999999999999    
      nonce:
        type: integer
        description: The nonce, denoting the number of times the address has been invoked
        example: 100
      minnonce:
        type: integer
        description: The minimum nonce, denoting the number of times the address has been invoked
        example: 0    
      maxnonce:
        type: integer
        description: The maximum nonce, denoting the number of times the address has been invoked
        example: 123513  
      address:
        type: string
        description: The address of the account
        example: 15de68788d01b2504df8234cb4721c54ed567305

/transaction:
  description: |
    handler: TransactionR
  get:
    description: Query the transaction
    queryParameters:
      index:
        type: integer
        description: Transactions are offset from this block number
        example: 10123
      blocknumber:
        type: integer
        description: The blocknumber for the transaction
        example: 11235       
      from:
        type: string
        description: Transactions from this address
        example: 15de68788d01b2504df8234cb4721c54ed567305
      to: 
        type: string
        description: Transactions to this address
        example: 15de68788d01b2504df8234cb4721c54ed567305     
      address:
        type: string
        description: Transactions from or to this address
        example: 15de68788d01b2504df8234cb4721c54ed567305     
      value:
        type: integer
        description: The value transmitted by the transaction
        example: 12314
      minvalue:
        type: integer
        description: The minimum value transmitted by the transaction
        example: 123     
      maxvalue:
        type: integer
        description: The maximum value transmitted by the transaction
        example: 12123314     
      gasprice: 
        type: integer
        description: The gasprice for this transaction
        example: 210000
      mingasprice: 
        type: integer
        description: The minimum gasprice for this transaction
        example: 210     
      maxgasprice:
        type: integer
        description: The maximum gasprice for this transaction
        example: 210000000     
      gaslimit: 
        type: integer
        description: The gaslimit set for this transaction
        example: 21000     
      mingaslimit:
        type: integer
        description: The minimum gaslimit for this transaction
        example: 10000     
      maxgaslimit:
        type: integer
        description: The maximum gaslimit for this transaction
        example: 21000000
  post:
    description: 

  options:
    description:

#  /result:
#      /{SHA}:
#        description: |
#          handler: TransactionResultR
#        get:
#          description: Get the status of a transaction by the SHA
  /last:
    /{Integer}:
      description: |
        handler: TxLastR
      get:
        description: Get the last number of transactions
    /queued:
      description: |
        handler: QueuedTransactionsR
      get:
        description: Get queued (unprocessed) transactions

/transactionResult:
    /{SHA}:
      description: |
        handler: TransactionResultR
      get:
        description: Get the status of a transaction by the SHA

/storage:
  description: |
    handler: StorageInfoR
  get:
   description: Query the storage

/solc:
  description: | 
    handler:  SolcR
  post:
    description: Compiles solidity files.
    body:
      src:
        description: a solidity source main file
        required: false
        type: string
        example: "src=contract C{}"
      main:
        description: a solidity source main file
        required: false
        type: file
        repeat: true
        example:
      import:
        description: a solidity source file imported by a main file
        required: false
        type: file
        repeat: true
        example:
      optimize:
        description: solc flag
        required: false
        example:
      optimize-runs:
        description: solc flag
        required: false
        example:
      add-std:
        description: solc flag
        required: false
        example:
      link:
        description: solc flag
        required: false
        example:
      libraries:
        description: solc flag
        required: false
        example:

/register: 
  description: | 
    handler: RegisterAppR
  get:
    description: Confirm that the developer registered an app.
    queryParameters:
      p: 
       description: unique id sent the developer in an email.
       required: true
       type: string
 
  post:
    description: Register a new application.
    queryParameters:
      app:
        description: the name of the application being registered.
        required: true
        type: string
      developer:
        description: the name of the developer.
        required: true
        type: string
      email: 
        description: the developer's email. This acts, in practice, as the developer's unique id.
        required: true 
        type: string
      appurl:
        description: the URL of the app. 
        required: true
        type: string
      repourl:
        description: the repo of the app.
        required: false
        type: string
      loginpass:
        description: the password associated with the developer account.
        required: true
        type: string

/login:
  description: |
    handler: LoginR
  post:
    description: 

/wallet:
  description: |
    handler: WalletR
  get:
    description:
  post:
    description:

/developer:
  description: |
    handler: DeveloperR
  post:
    description:

/coinbase:
  description: |
    handler: CoinbaseR
  get:
    description: Get the mining coinbase of the peer